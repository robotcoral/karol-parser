@top Program { statement* }

@skip { space | comment }

IdentifierWithParam { 
  Identifier "(" (Colour | Number) ")" 
}

Subroutine { 
  beginSubroutine Identifier 
    statement* 
  endSubroutine
}

Condition { 
  beginCondition Identifier 
    statement* 
  endCondition
}

If { 
  beginIf not? (Identifier | IdentifierWithParam) then 
    statement* 
  (beginElse
    statement*)? 
  endIf
}

While { 
  beginWhile (forever | Number times | doWhile not? (Identifier | IdentifierWithParam)) 
    statement* 
  endWhile
} 

WhileEnd {
  beginWhile
    statement* 
  endWhile (doWhile | until) not? (Identifier | IdentifierWithParam)
}

statement {
  Identifier |
  IdentifierWithParam |
  Subroutine |
  Condition |
  If |
  While |
  WhileEnd
}

@external specialize {Identifier} germanTokenizer from "./external_tokenizer" {
  beginSubroutine[@name=Keyword],
  endSubroutine[@name=Keyword],
  beginCondition[@name=Keyword],
  endCondition[@name=Keyword],
  beginIf[@name=Keyword],
  then[@name=Keyword],
  beginElse[@name=Keyword],
  endIf[@name=Keyword],
  beginWhile[@name=Keyword],
  endWhile[@name=Keyword],
  forever[@name=Keyword],
  times[@name=Keyword],
  doWhile[@name=Keyword],
  until[@name=Keyword],
  not[@name=Keyword],
  Colour[@name=Colour]
}

@tokens {
  Identifier { $[a-zA-Z_äüö\*] $[a-zA-Z_äüö\-0-9]* }
  Number { $[0-9]+ }
  space { $[ \t\n\r;]+ }
  comment { "{" $[a-zA-Z_äüö \t\n\r;\-0-9]* "}" } 
  "(" ")"

  @precedence {Number, Identifier}
}

@detectDelim
