@top Program { statement* }

@skip { space | comment }

IdentifierWithParam { 
  Identifier "(" (Colour | Number) ")" 
}

Subroutine { 
  beginSubroutine Identifier 
    statement* 
  endSubroutine
}

Condition { 
  beginCondition Identifier 
    statement* 
  endCondition
}

If { 
  beginIf not? (Identifier | IdentifierWithParam) then 
    statement* 
  (beginElse
    statement*)? 
  endIf
}

While { 
  beginWhile (forever | Number times | doWhile not? (Identifier | IdentifierWithParam)) 
    statement* 
  endWhile
} 

WhileEnd {
  beginWhile
    statement* 
  endWhile (doWhile | until) not? (Identifier | IdentifierWithParam)
}

statement {
  Identifier |
  IdentifierWithParam |
  Subroutine |
  Condition |
  If |
  While |
  WhileEnd
}

@external tokens beginSubroutineKW from "./keyword_tokenizer" { beginSubroutine[@name=Keyword] }
@external tokens endSubroutineKW from "./keyword_tokenizer" { endSubroutine[@name=Keyword] }
@external tokens beginConditionKW from "./keyword_tokenizer" { beginCondition[@name=Keyword] }
@external tokens endConditionKW from "./keyword_tokenizer" { endCondition[@name=Keyword] }
@external tokens beginIfKW from "./keyword_tokenizer" { beginIf[@name=Keyword] }
@external tokens thenKW from "./keyword_tokenizer" { then[@name=Keyword] }
@external tokens beginElseKW from "./keyword_tokenizer" { beginElse[@name=Keyword] }
@external tokens endIfKW from "./keyword_tokenizer" { endIf[@name=Keyword] }
@external tokens beginWhileKW from "./keyword_tokenizer" { beginWhile[@name=Keyword] }
@external tokens endWhileKW from "./keyword_tokenizer" { endWhile[@name=Keyword] }
@external tokens foreverKW from "./keyword_tokenizer" { forever[@name=Keyword] }
@external tokens timesKW from "./keyword_tokenizer" { times[@name=Keyword] }
@external tokens doWhileKW from "./keyword_tokenizer" { doWhile[@name=Keyword] }
@external tokens untilKW from "./keyword_tokenizer" { until[@name=Keyword] }
@external tokens notKW from "./keyword_tokenizer" { not[@name=Keyword] }

@tokens {
  Identifier { $[a-zA-Z_äüö] $[a-zA-Z_äüö\-0-9]* }
  Number { $[0-9]+ }
  Colour { "rot" | "gelb" | "blau" | "grün" | "schwarz" }
  space { $[ \t\n\r;]+ }
  comment { "{" $[a-zA-Z_äüö \t\n\r;\-0-9]* "}" } 
  "(" ")"

  @precedence {Colour, Number, Identifier}
}

@detectDelim
